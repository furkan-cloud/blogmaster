[{"C:\\Users\\ms\\Desktop\\rbc\\src\\router\\MainRouter.js":"1","C:\\Users\\ms\\Desktop\\rbc\\src\\router\\PrivateRouter.js":"2","C:\\Users\\ms\\Desktop\\rbc\\src\\services\\postData.js":"3","C:\\Users\\ms\\Desktop\\rbc\\src\\utils\\validations.js":"4","C:\\Users\\ms\\Desktop\\rbc\\src\\components\\navbar\\Navbar.js":"5","C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\HomePage\\HomePage.js":"6","C:\\Users\\ms\\Desktop\\rbc\\src\\components\\card\\mediaCard.js":"7","C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\LoginPage\\LoginPage.js":"8","C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\RegisterPage\\RegisterPage.js":"9","C:\\Users\\ms\\Desktop\\rbc\\src\\components\\card\\cardList.js":"10","C:\\Users\\ms\\Desktop\\rbc\\src\\context\\AppContext.js":"11","C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\RegisterPage\\index.js":"12","C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\PostDetail\\index.js":"13","C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\PostDetail\\PostDetail.js":"14","C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\ProfilePage\\ProfilePage.js":"15","C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\CustomPostPage\\CustomPostPage.js":"16"},{"size":1256,"mtime":1610880485037,"results":"17","hashOfConfig":"18"},{"size":527,"mtime":1610823350565,"results":"19","hashOfConfig":"18"},{"size":371,"mtime":1610884526636,"results":"20","hashOfConfig":"18"},{"size":559,"mtime":1610880840542,"results":"21","hashOfConfig":"18"},{"size":3628,"mtime":1610884960662,"results":"22","hashOfConfig":"18"},{"size":1179,"mtime":1610819654317,"results":"23","hashOfConfig":"18"},{"size":3360,"mtime":1610884370855,"results":"24","hashOfConfig":"18"},{"size":5232,"mtime":1610884819801,"results":"25","hashOfConfig":"18"},{"size":6101,"mtime":1610886639720,"results":"26","hashOfConfig":"18"},{"size":1544,"mtime":1610819618013,"results":"27","hashOfConfig":"18"},{"size":433,"mtime":1610884648735,"results":"28","hashOfConfig":"18"},{"size":59,"mtime":1609427727668,"results":"29","hashOfConfig":"18"},{"size":55,"mtime":1610822799800,"results":"30","hashOfConfig":"18"},{"size":8357,"mtime":1610884220534,"results":"31","hashOfConfig":"18"},{"size":4626,"mtime":1610886975724,"results":"32","hashOfConfig":"18"},{"size":5716,"mtime":1610882449177,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"gd31lh",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},"C:\\Users\\ms\\Desktop\\rbc\\src\\router\\MainRouter.js",["70","71","72","73"],"C:\\Users\\ms\\Desktop\\rbc\\src\\router\\PrivateRouter.js",[],"C:\\Users\\ms\\Desktop\\rbc\\src\\services\\postData.js",[],"C:\\Users\\ms\\Desktop\\rbc\\src\\utils\\validations.js",["74","75","76","77"],"C:\\Users\\ms\\Desktop\\rbc\\src\\components\\navbar\\Navbar.js",["78"],"import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport EcoIcon from \"@material-ui/icons/Eco\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { appContext } from \"../../context/AppContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const history = useHistory();\r\n  const { token, setToken } = useContext(appContext);\r\n\r\n  const isAuth = localStorage.getItem(\"token\");\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleProfileClick = () => {\r\n    history.push(\"/profile\");\r\n    setAnchorEl(null);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMainPage = () => {\r\n    history.push(\"/\");\r\n    setAnchorEl(null);\r\n  };\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setToken(null);\r\n    history.push(\"/\");\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormGroup></FormGroup>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={handleMainPage}\r\n          >\r\n            <EcoIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Awesome Blog\r\n          </Typography>\r\n          {token ? (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                style={{ marginTop: \"3.2rem\" }}\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleProfileClick}>Profile</MenuItem>\r\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <Button onClick={() => history.push(\"/login\")} color=\"inherit\">\r\n                Login\r\n              </Button>\r\n              <Button onClick={() => history.push(\"/register\")} color=\"inherit\">\r\n                Register\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\HomePage\\HomePage.js",["79","80","81"],"import { useState, useCallback, useContext, useEffect } from \"react\";\r\nimport { appContext } from \"../../context/AppContext\";\r\nimport CardList from \"../../components/card/cardList\";\r\nimport axios from \"axios\";\r\n\r\nexport const HomePage = () => {\r\n  const { test } = useContext(appContext);\r\n  const [nextUrl, setNextUrl] = useState();\r\n  const [postList, setPostList] = useState([]);\r\n\r\n  const getPostList = async (\r\n    url = \"https://clarusway-blogapp.herokuapp.com/api/list/\"\r\n  ) => {\r\n    try {\r\n      const result = await axios.get(url);\r\n      setPostList([...postList, ...result?.data?.results]);\r\n      setNextUrl(result?.data?.next);\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(response.data.non_field_errors[0]);\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostList();\r\n  }, []);\r\n\r\n  const handleLoadMore = () => {\r\n    getPostList(nextUrl);\r\n  };\r\n\r\n  if (!postList?.length) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <CardList\r\n        hasNext={!!nextUrl}\r\n        loadMore={handleLoadMore}\r\n        postList={postList}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ms\\Desktop\\rbc\\src\\components\\card\\mediaCard.js",["82","83","84","85"],"C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\LoginPage\\LoginPage.js",["86","87"],"C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\RegisterPage\\RegisterPage.js",["88","89"],"C:\\Users\\ms\\Desktop\\rbc\\src\\components\\card\\cardList.js",[],"C:\\Users\\ms\\Desktop\\rbc\\src\\context\\AppContext.js",[],"C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\RegisterPage\\index.js",[],"C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\PostDetail\\index.js",[],"C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\PostDetail\\PostDetail.js",["90","91","92","93","94","95","96","97","98"],"import { Fragment, useState, useCallback, useContext, useEffect } from \"react\";\r\nimport { appContext } from \"../../context/AppContext\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MediaCard from \"../../components/card/mediaCard\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport placeholder from \"../../assets/placeholder.png\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"60%\",\r\n    margin: \"20px auto\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  module: {},\r\n  image: {\r\n    padding: 3,\r\n  },\r\n  avatar: {\r\n    marginBottom: \"0.35em\",\r\n  },\r\n});\r\n\r\nexport const PostDetail = () => {\r\n  const { test } = useContext(appContext);\r\n  const [postDetail, setPostDetail] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n  let { slug } = useParams();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const getPostDetail = async (\r\n    url = `https://clarusway-blogapp.herokuapp.com/api/${slug}`\r\n  ) => {\r\n    try {\r\n      const result = await axios.get(url, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      setPostDetail(result?.data);\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(response?.data?.detail);\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const {\r\n    author,\r\n    content,\r\n    detail_url,\r\n    get_comment_count,\r\n    get_like_count,\r\n    get_view_count,\r\n    image,\r\n    published_date,\r\n    owner,\r\n    title,\r\n    has_liked,\r\n    like_url,\r\n    comments,\r\n  } = postDetail;\r\n\r\n  useEffect(() => {\r\n    getPostDetail();\r\n  }, []);\r\n\r\n  const handleLikeClick = async () => {\r\n    try {\r\n      const result = await axios.post(like_url, null, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      getPostDetail();\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(response?.data?.detail);\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = async () => {\r\n    try {\r\n      const result = await axios.delete(\r\n        `https://clarusway-blogapp.herokuapp.com/api/delete/${slug}/`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      );\r\n      history.push(`/`);\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(response?.data?.detail);\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCommentChange = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  const handleCommentSend = async (key) => {\r\n    if (key?.charCode === 13) {\r\n      try {\r\n        const result = await axios.post(\r\n          `https://clarusway-blogapp.herokuapp.com/api/comment/${slug}/`,\r\n          { content: comment },\r\n          {\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n        getPostDetail();\r\n      } catch ({ response }) {\r\n        if (response) {\r\n          console.log(response?.data?.detail);\r\n        } else {\r\n          console.log(\"Something went wrong!\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!postDetail) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={image || placeholder}\r\n            title={title}\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {published_date}\r\n            </Typography>\r\n            <p className={classes.module}>{content}</p>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <AccountCircle className={classes.avatar} />\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            {author}\r\n          </Typography>\r\n        </CardActions>\r\n        <CardActions>\r\n          <IconButton\r\n            aria-label=\"add to favorites\"\r\n            className={classes.image}\r\n            onClick={handleLikeClick}\r\n          >\r\n            <FavoriteIcon color={has_liked ? \"secondary\" : \"primary\"} />\r\n          </IconButton>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {get_like_count}\r\n          </Typography>\r\n          <IconButton aria-label=\"view count\" className={classes.image}>\r\n            <VisibilityIcon />\r\n          </IconButton>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {get_view_count}\r\n          </Typography>\r\n          <IconButton aria-label=\"comment count\" className={classes.image}>\r\n            <ChatBubbleOutlineIcon />\r\n          </IconButton>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {get_comment_count}\r\n          </Typography>\r\n        </CardActions>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Comments\r\n          </Typography>\r\n          {comments?.length\r\n            ? comments.map((item, idx) => {\r\n                return (\r\n                  <Fragment key={idx}>\r\n                    <hr />\r\n                    <Typography variant=\"h6\">{item?.user}:</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      {item?.content}:\r\n                    </Typography>\r\n                  </Fragment>\r\n                );\r\n              })\r\n            : \"No comments\"}\r\n          <TextField\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"comment\"\r\n            name=\"comment\"\r\n            label=\"Add comment\"\r\n            value={comment}\r\n            onChange={handleCommentChange}\r\n            onKeyPress={handleCommentSend}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        m={1}\r\n        p={1}\r\n        bgcolor=\"background.paper\"\r\n      >\r\n        {owner && (\r\n          <>\r\n            <Box p={1}>\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Delete post\r\n              </Button>\r\n            </Box>\r\n            <Box p={1}>\r\n              <Button\r\n                onClick={() => history.push(`/edit/${slug}`)}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Edit post\r\n              </Button>\r\n            </Box>\r\n          </>\r\n        )}\r\n        <Box p={1}>\r\n          <Button\r\n            onClick={() => history.push(\"/create\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Create new post\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\ProfilePage\\ProfilePage.js",["99","100","101"],"C:\\Users\\ms\\Desktop\\rbc\\src\\pages\\CustomPostPage\\CustomPostPage.js",["102","103","104"],"import React, { useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { title, content } from \"../../utils/validations\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\r\n\r\nimport { postData } from \"../../services/postData\";\r\nimport axios from \"axios\";\r\nconst validationSchema = yup.object({\r\n  title,\r\n  content,\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://picsum.photos/640/480)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  linkWrapper: {\r\n    textAlign: \"center\",\r\n    margin: theme.spacing(1.5),\r\n  },\r\n}));\r\n\r\nexport const CustomPostPage = () => {\r\n  const classes = useStyles();\r\n  let { slug } = useParams();\r\n  const [postDetail, setPostDetail] = useState([]);\r\n\r\n  const getPostDetail = async (\r\n    url = `https://clarusway-blogapp.herokuapp.com/api/${slug}`\r\n  ) => {\r\n    try {\r\n      const result = await axios.get(url, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      setPostDetail(result?.data);\r\n    } catch ({ response }) {\r\n      if (response) {\r\n        console.log(response?.data?.detail);\r\n      } else {\r\n        console.log(\"Something went wrong!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (slug) getPostDetail();\r\n  }, [slug]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      content: \"\",\r\n      image: \"\",\r\n      status: \"p\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const result = (await slug)\r\n          ? axios.put(\r\n              `https://clarusway-blogapp.herokuapp.com/api/update/${slug}/`,\r\n              values,\r\n              {\r\n                headers: {\r\n                  Accept: \"application/json\",\r\n                  \"Content-Type\": \"application/json\",\r\n                  Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n                },\r\n              }\r\n            )\r\n          : postData(\r\n              `https://clarusway-blogapp.herokuapp.com/api/create/`,\r\n              values\r\n            );\r\n        console.log(result?.data);\r\n      } catch ({ response }) {\r\n        if (response) {\r\n          console.log(response.data.non_field_errors[0]);\r\n        } else {\r\n          console.log(\"Something went wrong!\");\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (postDetail)\r\n      formik.setValues({\r\n        title: postDetail.title,\r\n        content: postDetail.content,\r\n        image: postDetail.image,\r\n        status: postDetail.status,\r\n      });\r\n  }, [postDetail]);\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <Grid item xs={12} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LocalMallIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Blog\r\n          </Typography>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              value={formik.values.title}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.title && Boolean(formik.errors.title)}\r\n              helperText={formik.touched.title && formik.errors.title}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              id=\"content\"\r\n              name=\"content\"\r\n              label=\"Content\"\r\n              value={formik.values.content}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.content && Boolean(formik.errors.content)}\r\n              helperText={formik.touched.content && formik.errors.content}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              id=\"image\"\r\n              name=\"image\"\r\n              label=\"Image URL\"\r\n              value={formik.values.image}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.image && Boolean(formik.errors.image)}\r\n              helperText={formik.touched.image && formik.errors.image}\r\n            />\r\n\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              className={classes.submit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n",{"ruleId":"105","severity":1,"message":"106","line":1,"column":10,"nodeType":"107","messageId":"108","endLine":1,"endColumn":14},{"ruleId":"105","severity":1,"message":"109","line":1,"column":26,"nodeType":"107","messageId":"108","endLine":1,"endColumn":34},{"ruleId":"105","severity":1,"message":"110","line":3,"column":40,"nodeType":"107","messageId":"108","endLine":3,"endColumn":48},{"ruleId":"105","severity":1,"message":"111","line":14,"column":9,"nodeType":"107","messageId":"108","endLine":14,"endColumn":19},{"ruleId":"105","severity":1,"message":"112","line":1,"column":18,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"113","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":33},{"ruleId":"105","severity":1,"message":"114","line":1,"column":35,"nodeType":"107","messageId":"108","endLine":1,"endColumn":39},{"ruleId":"105","severity":1,"message":"115","line":1,"column":41,"nodeType":"107","messageId":"108","endLine":1,"endColumn":46},{"ruleId":"105","severity":1,"message":"116","line":35,"column":9,"nodeType":"107","messageId":"108","endLine":35,"endColumn":15},{"ruleId":"105","severity":1,"message":"117","line":1,"column":20,"nodeType":"107","messageId":"108","endLine":1,"endColumn":31},{"ruleId":"105","severity":1,"message":"118","line":7,"column":11,"nodeType":"107","messageId":"108","endLine":7,"endColumn":15},{"ruleId":"119","severity":1,"message":"120","line":29,"column":6,"nodeType":"121","endLine":29,"endColumn":8,"suggestions":"122"},{"ruleId":"105","severity":1,"message":"123","line":8,"column":8,"nodeType":"107","messageId":"108","endLine":8,"endColumn":14},{"ruleId":"105","severity":1,"message":"124","line":11,"column":10,"nodeType":"107","messageId":"108","endLine":11,"endColumn":13},{"ruleId":"105","severity":1,"message":"125","line":45,"column":5,"nodeType":"107","messageId":"108","endLine":45,"endColumn":15},{"ruleId":"105","severity":1,"message":"126","line":52,"column":5,"nodeType":"107","messageId":"108","endLine":52,"endColumn":11},{"ruleId":"105","severity":1,"message":"127","line":21,"column":8,"nodeType":"107","messageId":"108","endLine":21,"endColumn":13},{"ruleId":"105","severity":1,"message":"128","line":63,"column":11,"nodeType":"107","messageId":"108","endLine":63,"endColumn":16},{"ruleId":"105","severity":1,"message":"129","line":9,"column":8,"nodeType":"107","messageId":"108","endLine":9,"endColumn":24},{"ruleId":"105","severity":1,"message":"130","line":10,"column":8,"nodeType":"107","messageId":"108","endLine":10,"endColumn":16},{"ruleId":"105","severity":1,"message":"117","line":1,"column":30,"nodeType":"107","messageId":"108","endLine":1,"endColumn":41},{"ruleId":"105","severity":1,"message":"131","line":8,"column":8,"nodeType":"107","messageId":"108","endLine":8,"endColumn":17},{"ruleId":"105","severity":1,"message":"124","line":19,"column":10,"nodeType":"107","messageId":"108","endLine":19,"endColumn":13},{"ruleId":"105","severity":1,"message":"118","line":45,"column":11,"nodeType":"107","messageId":"108","endLine":45,"endColumn":15},{"ruleId":"105","severity":1,"message":"125","line":76,"column":5,"nodeType":"107","messageId":"108","endLine":76,"endColumn":15},{"ruleId":"119","severity":1,"message":"132","line":91,"column":6,"nodeType":"121","endLine":91,"endColumn":8,"suggestions":"133"},{"ruleId":"105","severity":1,"message":"134","line":95,"column":13,"nodeType":"107","messageId":"108","endLine":95,"endColumn":19},{"ruleId":"105","severity":1,"message":"134","line":114,"column":13,"nodeType":"107","messageId":"108","endLine":114,"endColumn":19},{"ruleId":"105","severity":1,"message":"134","line":141,"column":15,"nodeType":"107","messageId":"108","endLine":141,"endColumn":21},{"ruleId":"105","severity":1,"message":"135","line":4,"column":20,"nodeType":"107","messageId":"108","endLine":4,"endColumn":25},{"ruleId":"105","severity":1,"message":"136","line":4,"column":27,"nodeType":"107","messageId":"108","endLine":4,"endColumn":35},{"ruleId":"105","severity":1,"message":"137","line":9,"column":8,"nodeType":"107","messageId":"108","endLine":9,"endColumn":11},{"ruleId":"105","severity":1,"message":"137","line":11,"column":8,"nodeType":"107","messageId":"108","endLine":11,"endColumn":11},{"ruleId":"119","severity":1,"message":"132","line":85,"column":6,"nodeType":"121","endLine":85,"endColumn":12,"suggestions":"138"},{"ruleId":"119","severity":1,"message":"139","line":132,"column":6,"nodeType":"121","endLine":132,"endColumn":18,"suggestions":"140"},"no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'Redirect' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'boolean' is defined but never used.","'number' is defined but never used.","'date' is defined but never used.","'array' is defined but never used.","'isAuth' is assigned a value but never used.","'useCallback' is defined but never used.","'test' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPostList'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'Button' is defined but never used.","'red' is defined but never used.","'detail_url' is assigned a value but never used.","'status' is assigned a value but never used.","'axios' is defined but never used.","'token' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'MediaCard' is defined but never used.","React Hook useEffect has a missing dependency: 'getPostDetail'. Either include it or remove the dependency array.",["142"],"'result' is assigned a value but never used.","'email' is defined but never used.","'password' is defined but never used.","'Box' is defined but never used.",["143"],"React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.",["144"],{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [getPostList]",{"range":"153","text":"154"},"Update the dependencies array to be: [getPostDetail]",{"range":"155","text":"156"},"Update the dependencies array to be: [getPostDetail, slug]",{"range":"157","text":"158"},"Update the dependencies array to be: [formik, postDetail]",{"range":"159","text":"160"},[888,890],"[getPostList]",[2664,2666],"[getPostDetail]",[2399,2405],"[getPostDetail, slug]",[3686,3698],"[formik, postDetail]"]